{"version":3,"sources":["webpack:///./src/ui/src/components/FilterAnnotModal/FilterAnnotModal.scss?4e00","webpack:///./src/ui/src/components/FilterAnnotModal/FilterAnnotModal.js","webpack:///./src/ui/src/components/FilterAnnotModal/index.js"],"names":["module","exports","TABS_ID","FilterAnnotModal","useSelector","state","selectors","isElementDisabled","DataElements","FILTER_MODAL","isElementOpen","getColorMap","getSelectedTab","getAnnotationFilters","isDisabled","isOpen","colorMap","selectedTab","annotationFilters","t","useTranslation","dispatch","useDispatch","useState","authors","setAuthors","annotTypes","setAnnotTypes","colors","setColorTypes","statuses","setStatusTypes","authorFilter","setAuthorFilter","typesFilter","setTypesFilter","colorFilter","setColorFilter","checkRepliesForAuthorFilter","setCheckRepliesForAuthorFilter","filterDocumentResults","setFilterDocumentResults","statusFilter","setStatusFilter","filterCount","setFilterCount","ifShowAnnotationStatus","setIfShowAnnotationStatus","getIconColor","annot","key","mapAnnotationToKey","iconColor","similarColorExist","currColors","newColor","colorObject","map","c","Object","assign","R","parseInt","G","B","filter","Math","abs","length","filterApply","newFilter","type","author","color","status","includes","getAnnotationClass","core","getDisplayAuthor","getReplies","reply","getStatus","actions","setCustomNoteFilter","setAnnotationFilters","includeReplies","typeFilter","redrawList","getAnnotationManager","getAnnotationsList","forEach","shouldHide","NoView","push","drawAnnotationsFromList","fireEvent","Events","ANNOTATION_FILTER_CHANGED","types","closeModal","filterClear","closeElement","setToolMode","defaultTool","useEffect","clearAllFilters","addEventListener","removeEventListener","annots","authorsToBeAdded","Set","annotTypesToBeAdded","annotColorsToBeAdded","annotStatusesToBeAdded","displayAuthor","add","window","Core","Annotations","WidgetAnnotation","StickyAnnotation","isReply","Link","rgbaToHex","A","ANNOTATION_STATUS_FILTER_PANEL_BUTTON","setSelectedTab","ANNOTATION_USER_FILTER_PANEL_BUTTON","modalClass","classNames","Modal","open","closed","className","data-element","onMouseDown","FocusTrap","locked","focusLastOnUnlock","e","stopPropagation","onSwipedDown","preventDefaultTouchmoveEvent","Button","img","onClick","title","Tabs","id","dataElement","ANNOTATION_COLOR_FILTER_PANEL_BUTTON","ANNOTATION_TYPE_FILTER_PANEL_BUTTON","val","index","Choice","label","checked","onChange","indexOf","target","getAttribute","style","background","hexToRgba","sort","type1","type2","toLocaleLowerCase","disabled"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,kBAAoB,OAAO,mBAAqB,S,ivDCqBlE,IAAMC,EAAU,mBAqcDC,EAncU,WACvB,IAME,IANqEC,aAAY,SAACC,GAAK,MAAK,CAC5FC,IAAUC,kBAAkBF,EAAOG,IAAaC,cAChDH,IAAUI,cAAcL,EAAOG,IAAaC,cAC5CH,IAAUK,YAAYN,GACtBC,IAAUM,eAAeP,EAAOH,GAChCI,IAAUO,qBAAqBR,OAC/B,GANKS,EAAU,KAAEC,EAAM,KAAEC,EAAQ,KAAEC,EAAW,KAAEC,EAAiB,KAO5DC,EAAqB,EAAhBC,cAAgB,GAApB,GACFC,EAAWC,cAEyB,IAAZC,mBAAS,IAAG,GAAnCC,EAAO,KAAEC,EAAU,KACsB,IAAZF,mBAAS,IAAG,GAAzCG,EAAU,KAAEC,EAAa,KACY,IAAZJ,mBAAS,IAAG,GAArCK,EAAM,KAAEC,EAAa,KACmB,IAAZN,mBAAS,IAAG,GAAxCO,EAAQ,KAAEC,EAAc,KACqB,IAAZR,mBAAS,IAAG,GAA7CS,EAAY,KAAEC,EAAe,KACc,IAAZV,mBAAS,IAAG,GAA3CW,EAAW,KAAEC,EAAc,KACgB,IAAZZ,mBAAS,IAAG,GAA3Ca,EAAW,KAAEC,EAAc,KACkD,IAAdd,oBAAS,GAAK,GAA7Ee,GAA2B,KAAEC,GAA8B,KACO,KAAfhB,oBAAS,GAAM,GAAlEiB,GAAqB,MAAEC,GAAwB,MACF,KAAZlB,mBAAS,IAAG,GAA7CmB,GAAY,MAAEC,GAAe,MACa,KAAXpB,mBAAS,GAAE,GAA1CqB,GAAW,MAAEC,GAAc,MACyC,KAAftB,oBAAS,GAAM,GAApEuB,GAAsB,MAAEC,GAAyB,MAElDC,GAAe,SAACC,GAAU,MACxBC,EAAMC,YAAmBF,GAG/B,OAAOA,EAFgC,QAAhB,EAAGjC,EAASkC,UAAI,aAAb,EAAeE,YAKrCC,GAAoB,SAACC,EAAYC,GACrC,IAAMC,EAAcF,EAAWG,KAAI,SAACC,GAAC,OAAKC,OAAOC,OAAO,CACtDC,EAAGC,SAAS,GAAD,OAAIJ,EAAE,IAAE,OAAGA,EAAE,IAAM,IAC9BK,EAAGD,SAAS,GAAD,OAAIJ,EAAE,IAAE,OAAGA,EAAE,IAAM,IAC9BM,EAAGF,SAAS,GAAD,OAAIJ,EAAE,IAAE,OAAGA,EAAE,IAAM,SAShC,QALsBF,EACnBS,QAAO,SAACP,GAAC,OAAKQ,KAAKC,IAAIZ,EAASM,EAAIH,EAAEG,GAFvB,IAGXK,KAAKC,IAAIZ,EAASQ,EAAIL,EAAEK,GAHb,IAIXG,KAAKC,IAAIZ,EAASS,EAAIN,EAAEM,GAJb,MAMKI,QAGnBC,GAAc,WAClB,IAAMC,EAAY,SAACrB,GACjB,IAAIsB,GAAO,EACPC,GAAS,EACTC,GAAQ,EACRC,GAAS,EAIb,GAHIxC,EAAYkC,OAAS,IACvBG,EAAOrC,EAAYyC,SAASC,YAAmB3B,KAE7CjB,EAAaoC,OAAS,KACxBI,EAASxC,EAAa2C,SAASE,IAAKC,iBAAiB7B,EAAc,WACpDX,GAA6B,CAC1C,IAC8B,EADQ,E,goBAAA,CAAnBW,EAAM8B,cACK,IAA9B,IAAK,EAAL,qBAAgC,KAArBC,EAAK,QAGd,GAAIhD,EAAa2C,SAASE,IAAKC,iBAAiBE,EAAc,SAAK,CACjER,GAAS,EACT,QAEH,+BAGL,GAAIpC,EAAYgC,OAAS,EAAG,CAC1B,IAAMhB,EAAYJ,GAAaC,GAE7BwB,EADErB,EACMC,GAAkBjB,EAAagB,GAG/BhB,EAAYuC,SAAS,WAUjC,OAPIjC,GAAa0B,OAAS,IAEtBM,EADEzB,EAAMgC,YACCvC,GAAaiC,SAAS1B,EAAMgC,aAE5BvC,GAAaiC,SAAS,SAG5BJ,GAAQC,GAAUC,GAASC,GAEpCrD,EAAS6D,IAAQC,oBAAoBb,IACrCjD,EAAS6D,IAAQE,qBAAqB,CACpCC,eAAgB/C,GAChBN,eACAI,cACAkD,WAAYpD,EACZQ,mBAEF,IAAM6C,EAAa,GACf/C,GACFqC,IAAKW,uBAAuBC,qBACzBC,SAAQ,SAACzC,GACR,IAAM0C,GAAcrB,EAAUrB,GAC1B0C,IAAe1C,EAAM2C,SACvB3C,EAAM2C,OAASD,EACfJ,EAAWM,KAAK5C,OAItB4B,IAAKW,uBAAuBC,qBACzBC,SAAQ,SAACzC,IACa,IAAjBA,EAAM2C,SACR3C,EAAM2C,QAAS,EACfL,EAAWM,KAAK5C,OAIxB4B,IAAKW,uBAAuBM,wBAAwBP,GACpDQ,YACEC,IAAOC,0BACP,CACEC,MAAOhE,EACPV,QAASQ,EACTJ,OAAQQ,EACRN,SAAUY,GACVJ,iCAGJ6D,MAGIC,GAAc,WAClB7D,IAA+B,GAC/BN,EAAgB,IAChBE,EAAe,IACfE,EAAe,IACfM,GAAgB,IAEhB,IAAM4C,EAAa,GACnBV,IAAKW,uBAAuBC,qBACzBC,SAAQ,SAACzC,IACa,IAAjBA,EAAM2C,SACR3C,EAAM2C,QAAS,EACfL,EAAWM,KAAK5C,OAGtB4B,IAAKW,uBAAuBM,wBAAwBP,IAGhDY,GAAa,WACjB9E,EAAS6D,IAAQmB,aAAa7F,IAAaC,eAC3CoE,IAAKyB,YAAYC,MAGnBC,qBAAU,WACR,IAAMC,EAAkB,WACtBL,KACA/B,MAGF,OADAQ,IAAK6B,iBAAiB,mBAAoBD,GACnC,WACL5B,IAAK8B,oBAAoB,mBAAoBF,MAE9C,IAEHD,qBAAU,WACR,IAAMI,EAAS/B,IAAKY,qBAGdoB,EAAmB,IAAIC,IACvBC,EAAsB,IAAID,IAC1BE,EAAuB,IAAIF,IAC3BG,EAAyB,IAAIH,IAiCnC,OAhCAF,EAAOlB,SAAQ,SAACzC,GACd,IAAMiE,EAAgBrC,IAAKC,iBAAiB7B,EAAc,QAK1D,GAJIiE,GAAmC,KAAlBA,GACnBL,EAAiBM,IAAID,KAIrBjE,aAAiBmE,OAAOC,KAAKC,YAAYC,kBACxCtE,aAAiBmE,OAAOC,KAAKC,YAAYE,kBAAoBvE,EAAMwE,WACpExE,aAAiBmE,OAAOC,KAAKC,YAAYI,MAH3C,CAOAX,EAAoBI,IAAIvC,YAAmB3B,IAC3C,IAAMG,EAAYJ,GAAaC,GAC3BG,IAAcC,GAAkB,EAAI2D,GAAuB5D,IAC7D4D,EAAqBG,IAAIQ,YAAUvE,EAAUS,EAAGT,EAAUW,EAAGX,EAAUY,EAAGZ,EAAUwE,IAGlF3E,EAAMgC,YACRgC,EAAuBE,IAAIlE,EAAMgC,aAEjCgC,EAAuBE,IAAI,YAI/B1F,EAAW,EAAIoF,IACflF,EAAc,EAAIoF,IAClBlF,EAAc,EAAImF,IAClBjF,EAAe,EAAIkF,IAEnBpC,IAAK6B,iBAAiB,mBAAoBP,IACnC,WACLtB,IAAK8B,oBAAoB,mBAAoBR,OAE9C,CAACpF,IAEJyF,qBAAU,WACJvF,IAAgBT,IAAaqH,uCAA0C/E,IACzEzB,EAAS6D,IAAQ4C,eAAe5H,EAASM,IAAauH,wCAEvD,CAAChH,EAAQE,EAAa6B,KAEzB0D,qBAAU,WACR3D,IAAgBP,GAA8B,EAAI,GAAKN,EAAaoC,OAAShC,EAAYgC,OAASlC,EAAYkC,OAAS1B,GAAa0B,UACnI,CAAC9B,GAA6BN,EAAcI,EAAaF,EAAaQ,KAEzE8D,qBAAU,WACRzD,GAA2BjB,EAASsC,OAAS,GAA2B,IAApBtC,EAASsC,QAAgC,SAAhBtC,EAAS,MACrF,CAACA,IAEJ0E,qBAAU,WACJzF,IACFwB,GAA+BrB,EAAkBmE,gBACjDpD,EAAgBf,EAAkBc,cAClCK,EAAenB,EAAkBkB,aACjCD,EAAejB,EAAkBoE,YACjC3C,GAAgBzB,EAAkBwB,iBAEnC,CAAC3B,IAEJ,IA4GMiH,GAAaC,IAAW,CAC5BC,OAAO,EACP/H,kBAAkB,EAClBgI,KAAMpH,EACNqH,QAASrH,IAGX,OAAOD,EAAa,KAClB,yBAAKuH,UAAWL,GAAYM,eAAc9H,IAAaC,aAAc8H,YAAapC,IAChF,kBAACqC,EAAA,EAAS,CAACC,OAAQ1H,EAAQ2H,mBAAiB,GAC1C,yBAAKL,UAAU,YAAYE,YAAa,SAACI,GAAC,OAAKA,EAAEC,oBAC9C/D,IAAKY,qBAAqBrB,OAAS,EAClC,yBAAKiE,UAAU,gBACb,kBAAC,IAAS,CAACQ,aAAc1C,GAAY2C,8BAA4B,GAC/D,yBAAKT,UAAU,oBACf,yBAAKA,UAAU,UACb,uCAASlH,EAAE,mCAAkC,aAAKyB,GAAW,MAC7D,kBAACmG,EAAA,EAAM,CACLC,IAAI,aACJC,QAAS9C,GACT+C,MAAM,mBAIZ,yBAAKb,UAAU,YACf,yBAAKA,UAAU,QACb,kBAACc,EAAA,EAAI,CAACC,GAAIlJ,GACR,yBAAKmI,UAAU,YACb,kBAAC,IAAG,CAACgB,YAAa7I,IAAauH,qCAC7B,4BAAQM,UAAU,sBACflH,EAAE,kCAGP,yBAAKkH,UAAU,wBACf,kBAAC,IAAG,CAACgB,YAAa7I,IAAa8I,sCAC7B,4BAAQjB,UAAU,sBACflH,EAAE,mCAGP,yBAAKkH,UAAU,wBACf,kBAAC,IAAG,CAACgB,YAAa7I,IAAa+I,qCAC7B,4BAAQlB,UAAU,sBACflH,EAAE,kCAGN2B,IACC,oCACE,yBAAKuF,UAAU,wBACf,kBAAC,IAAG,CAACgB,YAAa7I,IAAaqH,uCAC7B,4BAAQQ,UAAU,sBACflH,EAAE,sCAMb,yBAAKkH,UAAU,kBACb,kBAAC,IAAQ,CAACgB,YAAY,6BAnKpC,yBAAKhB,UAAU,oCACZ,EAAI7G,GAASiC,KAAI,SAAC+F,EAAKC,GACtB,OACE,kBAACC,EAAA,EAAM,CACLnF,KAAK,WACLrB,IAAKuG,EACLE,MAAOH,EACPI,QAAS5H,EAAa2C,SAAS6E,GAC/BJ,GAAII,EACJK,SAAU,SAAClB,IACkD,IAAvD3G,EAAa8H,QAAQnB,EAAEoB,OAAOC,aAAa,OAC7C/H,EAAgB,GAAD,SAAKD,GAAY,CAAE2G,EAAEoB,OAAOC,aAAa,SAExD/H,EAAgBD,EAAaiC,QAAO,SAACO,GAAM,OAAKA,IAAWmE,EAAEoB,OAAOC,aAAa,kBAyJ/E,kBAAC,IAAQ,CAACX,YAAY,8BAlHpC,yBAAKhB,UAAU,iBACZ,EAAIzG,GAAQ6B,KAAI,SAAC+F,EAAKC,GACrB,OACE,yBAAKpB,UAAU,cAAcnF,IAAG,eAAUuG,IACxC,kBAACC,EAAA,EAAM,CACLnF,KAAK,WACLqF,QAASxH,EAAYuC,SAAS6E,GAC9BJ,GAAII,EACJK,SAAU,SAAClB,IACiD,IAAtDvG,EAAY0H,QAAQnB,EAAEoB,OAAOC,aAAa,OAC5C3H,EAAe,GAAD,SAAKD,GAAW,CAAEuG,EAAEoB,OAAOC,aAAa,SAEtD3H,EAAeD,EAAY6B,QAAO,SAACQ,GAAK,OAAKA,IAAUkE,EAAEoB,OAAOC,aAAa,aAInF,yBACE3B,UAAU,YACV4B,MAAO,CACLC,WAAYC,YAAUX,YAkGpB,kBAAC,IAAQ,CAACH,YAAY,6BAhJpC,yBAAKhB,UAAU,oCACZ,EAAI3G,GACF0I,MAAK,SAACC,EAAOC,GAAK,OAAMnJ,EAAE,cAAD,OAAekJ,KAAYlJ,EAAE,cAAD,OAAemJ,KAAY,EAAI,KACpF7G,KAAI,SAAC+F,EAAKC,GACT,OACE,kBAACC,EAAA,EAAM,CACLnF,KAAK,WACLrB,IAAKuG,EACLE,MAAOxI,EAAE,cAAD,OAAeqI,IACvBI,QAAS1H,EAAYyC,SAAS6E,GAC9BJ,GAAII,EACJK,SAAU,SAAClB,IACiD,IAAtDzG,EAAY4H,QAAQnB,EAAEoB,OAAOC,aAAa,OAC5C7H,EAAe,GAAD,SAAKD,GAAW,CAAEyG,EAAEoB,OAAOC,aAAa,SAEtD7H,EAAeD,EAAY+B,QAAO,SAACM,GAAI,OAAKA,IAASoE,EAAEoB,OAAOC,aAAa,kBAoI1ElH,IACC,kBAAC,IAAQ,CAACuG,YAAY,+BA1FtC,yBAAKhB,UAAU,sCACZ,EAAIvG,GAAU2B,KAAI,SAAC+F,EAAKC,GACvB,OACE,kBAACC,EAAA,EAAM,CACLnF,KAAK,WACLrB,IAAKuG,EACLG,QAASlH,GAAaiC,SAAS6E,GAC/BG,MAAOxI,EAAE,gBAAD,OAAiBqI,EAAIe,sBAC7BnB,GAAII,EACJK,SAAU,SAAClB,IACkD,IAAvDjG,GAAaoH,QAAQnB,EAAEoB,OAAOC,aAAa,OAC7CrH,GAAgB,GAAD,SAAKD,IAAY,CAAEiG,EAAEoB,OAAOC,aAAa,SAExDrH,GAAgBD,GAAauB,QAAO,SAACS,GAAM,OAAKA,IAAWiE,EAAEoB,OAAOC,aAAa,qBAoFrF,yBAAK3B,UAAU,YACf,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,mBAAmBlH,EAAE,2CACpC,yBAAKkH,UAAU,YACb,kBAACqB,EAAA,EAAM,CACLC,MAAOxI,EAAE,0CACTyI,QAAStH,GACTuH,SAAU,SAAClB,GAAC,OAAKpG,GAA+BoG,EAAEoB,OAAOH,UACzDR,GAAG,uCAEL,kBAACM,EAAA,EAAM,CACLC,MAAOxI,EAAE,0CACTyI,QAASpH,GACTqH,SAAU,SAAClB,GAAC,OAAKlG,GAAyBkG,EAAEoB,OAAOH,UACnDR,GAAG,yCAIT,yBAAKf,UAAU,YACf,yBAAKA,UAAU,UACb,kBAACU,EAAA,EAAM,CAACV,UAAU,qBAAqBY,QAAS7C,GAAauD,MAAOxI,EAAE,mBACpEqJ,SAA0B,IAAhB5H,KACZ,kBAACmG,EAAA,EAAM,CAACV,UAAU,qBAAqBY,QAAS5E,GAAasF,MAAOxI,EAAE,oBAI1E,6BACE,yBAAKkH,UAAU,oBACf,yBAAKA,UAAU,WAAWlH,EAAE,qCChd3BhB","file":"chunks/12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LEFT_HEADER_WIDTH\":\"41px\",\"RIGHT_HEADER_WIDTH\":\"41px\"};","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport fireEvent from 'helpers/fireEvent';\nimport { Swipeable } from 'react-swipeable';\nimport { FocusTrap } from '@pdftron/webviewer-react-toolkit';\nimport defaultTool from 'constants/defaultTool';\nimport Events from 'constants/events';\nimport { mapAnnotationToKey } from 'constants/map';\nimport DataElements from 'constants/dataElement';\nimport { rgbaToHex, hexToRgba } from 'helpers/color';\nimport { getAnnotationClass } from 'helpers/getAnnotationClass';\nimport Choice from 'components/Choice';\nimport Button from 'components/Button';\nimport { Tabs, Tab, TabPanel } from 'components/Tabs';\n\nimport './FilterAnnotModal.scss';\n\nconst TABS_ID = 'filterAnnotModal';\n\nconst FilterAnnotModal = () => {\n  const [isDisabled, isOpen, colorMap, selectedTab, annotationFilters] = useSelector((state) => [\n    selectors.isElementDisabled(state, DataElements.FILTER_MODAL),\n    selectors.isElementOpen(state, DataElements.FILTER_MODAL),\n    selectors.getColorMap(state),\n    selectors.getSelectedTab(state, TABS_ID),\n    selectors.getAnnotationFilters(state)\n  ]);\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  const [authors, setAuthors] = useState([]);\n  const [annotTypes, setAnnotTypes] = useState([]);\n  const [colors, setColorTypes] = useState([]);\n  const [statuses, setStatusTypes] = useState([]);\n  const [authorFilter, setAuthorFilter] = useState([]);\n  const [typesFilter, setTypesFilter] = useState([]);\n  const [colorFilter, setColorFilter] = useState([]);\n  const [checkRepliesForAuthorFilter, setCheckRepliesForAuthorFilter] = useState(true);\n  const [filterDocumentResults, setFilterDocumentResults] = useState(false);\n  const [statusFilter, setStatusFilter] = useState([]);\n  const [filterCount, setFilterCount] = useState(0);\n  const [ifShowAnnotationStatus, setIfShowAnnotationStatus] = useState(false);\n\n  const getIconColor = (annot) => {\n    const key = mapAnnotationToKey(annot);\n    const iconColorProperty = colorMap[key]?.iconColor;\n\n    return annot[iconColorProperty];\n  };\n\n  const similarColorExist = (currColors, newColor) => {\n    const colorObject = currColors.map((c) => Object.assign({\n      R: parseInt(`${c[1]}${c[2]}`, 16),\n      G: parseInt(`${c[3]}${c[4]}`, 16),\n      B: parseInt(`${c[5]}${c[6]}`, 16)\n    }));\n\n    const threshold = 10;\n    const similarColors = colorObject\n      .filter((c) => Math.abs(newColor.R - c.R) < threshold\n        && Math.abs(newColor.G - c.G) < threshold\n        && Math.abs(newColor.B - c.B) < threshold);\n\n    return !!similarColors.length;\n  };\n\n  const filterApply = () => {\n    const newFilter = (annot) => {\n      let type = true;\n      let author = true;\n      let color = true;\n      let status = true;\n      if (typesFilter.length > 0) {\n        type = typesFilter.includes(getAnnotationClass(annot));\n      }\n      if (authorFilter.length > 0) {\n        author = authorFilter.includes(core.getDisplayAuthor(annot['Author']));\n        if (!author && checkRepliesForAuthorFilter) {\n          const allReplies = annot.getReplies();\n          for (const reply of allReplies) {\n            // Short-circuit the search if at least one reply is created by\n            // one of the desired authors\n            if (authorFilter.includes(core.getDisplayAuthor(reply['Author']))) {\n              author = true;\n              break;\n            }\n          }\n        }\n      }\n      if (colorFilter.length > 0) {\n        const iconColor = getIconColor(annot);\n        if (iconColor) {\n          color = similarColorExist(colorFilter, iconColor);\n        } else {\n          // check for default color if no color is available\n          color = colorFilter.includes('#485056');\n        }\n      }\n      if (statusFilter.length > 0) {\n        if (annot.getStatus()) {\n          status = statusFilter.includes(annot.getStatus());\n        } else {\n          status = statusFilter.includes('None');\n        }\n      }\n      return type && author && color && status;\n    };\n    dispatch(actions.setCustomNoteFilter(newFilter));\n    dispatch(actions.setAnnotationFilters({\n      includeReplies: checkRepliesForAuthorFilter,\n      authorFilter,\n      colorFilter,\n      typeFilter: typesFilter,\n      statusFilter\n    }));\n    const redrawList = [];\n    if (filterDocumentResults) {\n      core.getAnnotationManager().getAnnotationsList()\n        .forEach((annot) => {\n          const shouldHide = !newFilter(annot);\n          if (shouldHide !== annot.NoView) {\n            annot.NoView = shouldHide;\n            redrawList.push(annot);\n          }\n        });\n    } else {\n      core.getAnnotationManager().getAnnotationsList()\n        .forEach((annot) => {\n          if (annot.NoView === true) {\n            annot.NoView = false;\n            redrawList.push(annot);\n          }\n        });\n    }\n    core.getAnnotationManager().drawAnnotationsFromList(redrawList);\n    fireEvent(\n      Events.ANNOTATION_FILTER_CHANGED,\n      {\n        types: typesFilter,\n        authors: authorFilter,\n        colors: colorFilter,\n        statuses: statusFilter,\n        checkRepliesForAuthorFilter\n      }\n    );\n    closeModal();\n  };\n\n  const filterClear = () => {\n    setCheckRepliesForAuthorFilter(false);\n    setAuthorFilter([]);\n    setTypesFilter([]);\n    setColorFilter([]);\n    setStatusFilter([]);\n\n    const redrawList = [];\n    core.getAnnotationManager().getAnnotationsList()\n      .forEach((annot) => {\n        if (annot.NoView === true) {\n          annot.NoView = false;\n          redrawList.push(annot);\n        }\n      });\n    core.getAnnotationManager().drawAnnotationsFromList(redrawList);\n  };\n\n  const closeModal = () => {\n    dispatch(actions.closeElement(DataElements.FILTER_MODAL));\n    core.setToolMode(defaultTool);\n  };\n\n  useEffect(() => {\n    const clearAllFilters = () => {\n      filterClear();\n      filterApply();\n    };\n    core.addEventListener('documentUnloaded', clearAllFilters);\n    return () => {\n      core.removeEventListener('documentUnloaded', clearAllFilters);\n    };\n  }, []);\n\n  useEffect(() => {\n    const annots = core.getAnnotationsList();\n    // set is a great way to remove any duplicate additions and ensure the unique items are present\n    // the only gotcha that it should not be used by state since not always it will trigger a rerender\n    const authorsToBeAdded = new Set();\n    const annotTypesToBeAdded = new Set();\n    const annotColorsToBeAdded = new Set();\n    const annotStatusesToBeAdded = new Set();\n    annots.forEach((annot) => {\n      const displayAuthor = core.getDisplayAuthor(annot['Author']);\n      if (displayAuthor && displayAuthor !== '') {\n        authorsToBeAdded.add(displayAuthor);\n      }\n      // We don't show it in the filter for WidgetAnnotation or StickyAnnotation or LinkAnnotation from the comments\n      if (\n        annot instanceof window.Core.Annotations.WidgetAnnotation ||\n        (annot instanceof window.Core.Annotations.StickyAnnotation && annot.isReply()) ||\n        annot instanceof window.Core.Annotations.Link\n      ) {\n        return;\n      }\n      annotTypesToBeAdded.add(getAnnotationClass(annot));\n      const iconColor = getIconColor(annot);\n      if (iconColor && !similarColorExist([...annotColorsToBeAdded], iconColor)) {\n        annotColorsToBeAdded.add(rgbaToHex(iconColor.R, iconColor.G, iconColor.B, iconColor.A));\n      }\n\n      if (annot.getStatus()) {\n        annotStatusesToBeAdded.add(annot.getStatus());\n      } else {\n        annotStatusesToBeAdded.add('None');\n      }\n    });\n\n    setAuthors([...authorsToBeAdded]);\n    setAnnotTypes([...annotTypesToBeAdded]);\n    setColorTypes([...annotColorsToBeAdded]);\n    setStatusTypes([...annotStatusesToBeAdded]);\n\n    core.addEventListener('documentUnloaded', closeModal);\n    return () => {\n      core.removeEventListener('documentUnloaded', closeModal);\n    };\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (selectedTab === DataElements.ANNOTATION_STATUS_FILTER_PANEL_BUTTON && !ifShowAnnotationStatus) {\n      dispatch(actions.setSelectedTab(TABS_ID, DataElements.ANNOTATION_USER_FILTER_PANEL_BUTTON));\n    }\n  }, [isOpen, selectedTab, ifShowAnnotationStatus]);\n\n  useEffect(() => {\n    setFilterCount((checkRepliesForAuthorFilter ? 1 : 0) + authorFilter.length + colorFilter.length + typesFilter.length + statusFilter.length);\n  }, [checkRepliesForAuthorFilter, authorFilter, colorFilter, typesFilter, statusFilter]);\n\n  useEffect(() => {\n    setIfShowAnnotationStatus((statuses.length > 1) || (statuses.length === 1 && statuses[0] !== 'None'));\n  }, [statuses]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setCheckRepliesForAuthorFilter(annotationFilters.includeReplies);\n      setAuthorFilter(annotationFilters.authorFilter);\n      setColorFilter(annotationFilters.colorFilter);\n      setTypesFilter(annotationFilters.typeFilter);\n      setStatusFilter(annotationFilters.statusFilter);\n    }\n  }, [isOpen]);\n\n  const renderAuthors = () => {\n    return (\n      <div className=\"user-filters three-column-filter\">\n        {[...authors].map((val, index) => {\n          return (\n            <Choice\n              type=\"checkbox\"\n              key={index}\n              label={val}\n              checked={authorFilter.includes(val)}\n              id={val}\n              onChange={(e) => {\n                if (authorFilter.indexOf(e.target.getAttribute('id')) === -1) {\n                  setAuthorFilter([...authorFilter, e.target.getAttribute('id')]);\n                } else {\n                  setAuthorFilter(authorFilter.filter((author) => author !== e.target.getAttribute('id')));\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderAnnotTypes = () => {\n    return (\n      <div className=\"type-filters three-column-filter\">\n        {[...annotTypes]\n          .sort((type1, type2) => (t(`annotation.${type1}`) <= t(`annotation.${type2}`) ? -1 : 1))\n          .map((val, index) => {\n            return (\n              <Choice\n                type=\"checkbox\"\n                key={index}\n                label={t(`annotation.${val}`)}\n                checked={typesFilter.includes(val)}\n                id={val}\n                onChange={(e) => {\n                  if (typesFilter.indexOf(e.target.getAttribute('id')) === -1) {\n                    setTypesFilter([...typesFilter, e.target.getAttribute('id')]);\n                  } else {\n                    setTypesFilter(typesFilter.filter((type) => type !== e.target.getAttribute('id')));\n                  }\n                }}\n              />\n            );\n          })}\n      </div>\n    );\n  };\n\n  const renderColorTypes = () => {\n    return (\n      <div className=\"color-filters\">\n        {[...colors].map((val, index) => {\n          return (\n            <div className=\"colorSelect\" key={`color${index}`}>\n              <Choice\n                type=\"checkbox\"\n                checked={colorFilter.includes(val)}\n                id={val}\n                onChange={(e) => {\n                  if (colorFilter.indexOf(e.target.getAttribute('id')) === -1) {\n                    setColorFilter([...colorFilter, e.target.getAttribute('id')]);\n                  } else {\n                    setColorFilter(colorFilter.filter((color) => color !== e.target.getAttribute('id')));\n                  }\n                }}\n              />\n              <div\n                className=\"colorCell\"\n                style={{\n                  background: hexToRgba(val),\n                }}\n              ></div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderStatusTypes = () => {\n    return (\n      <div className=\"status-filters three-column-filter\">\n        {[...statuses].map((val, index) => {\n          return (\n            <Choice\n              type=\"checkbox\"\n              key={index}\n              checked={statusFilter.includes(val)}\n              label={t(`option.state.${val.toLocaleLowerCase()}`)}\n              id={val}\n              onChange={(e) => {\n                if (statusFilter.indexOf(e.target.getAttribute('id')) === -1) {\n                  setStatusFilter([...statusFilter, e.target.getAttribute('id')]);\n                } else {\n                  setStatusFilter(statusFilter.filter((status) => status !== e.target.getAttribute('id')));\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  const modalClass = classNames({\n    Modal: true,\n    FilterAnnotModal: true,\n    open: isOpen,\n    closed: !isOpen,\n  });\n\n  return isDisabled ? null : (\n    <div className={modalClass} data-element={DataElements.FILTER_MODAL} onMouseDown={closeModal}>\n      <FocusTrap locked={isOpen} focusLastOnUnlock>\n        <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\n          {core.getAnnotationsList().length > 0 ? (\n            <div className=\"filter-modal\">\n              <Swipeable onSwipedDown={closeModal} preventDefaultTouchmoveEvent>\n                <div className=\"swipe-indicator\" />\n                <div className=\"header\">\n                  <div>{`${t('option.filterAnnotModal.filters')} (${filterCount})`}</div>\n                  <Button\n                    img=\"icon-close\"\n                    onClick={closeModal}\n                    title=\"action.close\"\n                  />\n                </div>\n              </Swipeable>\n              <div className=\"divider\"></div>\n              <div className=\"body\">\n                <Tabs id={TABS_ID}>\n                  <div className=\"tab-list\">\n                    <Tab dataElement={DataElements.ANNOTATION_USER_FILTER_PANEL_BUTTON}>\n                      <button className=\"tab-options-button\">\n                        {t('option.filterAnnotModal.user')}\n                      </button>\n                    </Tab>\n                    <div className=\"tab-options-divider\" />\n                    <Tab dataElement={DataElements.ANNOTATION_COLOR_FILTER_PANEL_BUTTON}>\n                      <button className=\"tab-options-button\">\n                        {t('option.filterAnnotModal.color')}\n                      </button>\n                    </Tab>\n                    <div className=\"tab-options-divider\" />\n                    <Tab dataElement={DataElements.ANNOTATION_TYPE_FILTER_PANEL_BUTTON}>\n                      <button className=\"tab-options-button\">\n                        {t('option.filterAnnotModal.type')}\n                      </button>\n                    </Tab>\n                    {ifShowAnnotationStatus && (\n                      <>\n                        <div className=\"tab-options-divider\" />\n                        <Tab dataElement={DataElements.ANNOTATION_STATUS_FILTER_PANEL_BUTTON}>\n                          <button className=\"tab-options-button\">\n                            {t('option.filterAnnotModal.status')}\n                          </button>\n                        </Tab>\n                      </>\n                    )}\n                  </div>\n                  <div className=\"filter-options\">\n                    <TabPanel dataElement=\"annotationUserFilterPanel\">\n                      {renderAuthors()}\n                    </TabPanel>\n                    <TabPanel dataElement=\"annotationColorFilterPanel\">\n                      {renderColorTypes()}\n                    </TabPanel>\n                    <TabPanel dataElement=\"annotationTypeFilterPanel\">\n                      {renderAnnotTypes()}\n                    </TabPanel>\n                    {ifShowAnnotationStatus && (\n                      <TabPanel dataElement=\"annotationStatusFilterPanel\">\n                        {renderStatusTypes()}\n                      </TabPanel>\n                    )}\n                  </div>\n                </Tabs>\n              </div>\n              <div className=\"divider\"></div>\n              <div className=\"settings-body\">\n                <div className=\"settings-header\">{t('option.filterAnnotModal.filterSettings')}</div>\n                <div className=\"settings\">\n                  <Choice\n                    label={t('option.filterAnnotModal.includeReplies')}\n                    checked={checkRepliesForAuthorFilter}\n                    onChange={(e) => setCheckRepliesForAuthorFilter(e.target.checked)}\n                    id=\"filter-annot-modal-include-replies\"\n                  />\n                  <Choice\n                    label={t('option.filterAnnotModal.filterDocument')}\n                    checked={filterDocumentResults}\n                    onChange={(e) => setFilterDocumentResults(e.target.checked)}\n                    id=\"filter-annot-modal-filter-document\"\n                  />\n                </div>\n              </div>\n              <div className=\"divider\"></div>\n              <div className=\"footer\">\n                <Button className=\"filter-annot-clear\" onClick={filterClear} label={t('action.clearAll')}\n                  disabled={filterCount === 0}/>\n                <Button className=\"filter-annot-apply\" onClick={filterApply} label={t('action.apply')}/>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className=\"swipe-indicator\" />\n              <div className=\"message\">{t('message.noAnnotationsFilter')}</div>\n            </div>\n          )}\n        </div>\n      </FocusTrap>\n    </div>\n  );\n};\n\nexport default FilterAnnotModal;\n","import FilterAnnotModal from './FilterAnnotModal';\n\nexport default FilterAnnotModal;"],"sourceRoot":""}