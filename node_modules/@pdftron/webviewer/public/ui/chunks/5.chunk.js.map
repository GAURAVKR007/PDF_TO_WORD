{"version":3,"sources":["webpack:///./src/ui/src/components/SignatureModal/InkSignature/InkSignature.scss?6e4c","webpack:///./src/ui/src/components/SignatureModal/TextSignature/TextSignature.scss?c8c8","webpack:///./src/ui/src/components/SignatureModal/ImageSignature/ImageSignature.scss?31ec","webpack:///./src/ui/src/components/SignatureModal/SavedSignatures/SavedSignatures.scss?aa66","webpack:///./src/ui/src/components/SignatureModal/SignatureModal.scss?e41a","webpack:///./src/ui/src/components/SignatureModal/InkSignature/InkSignature.js","webpack:///./src/ui/src/components/SignatureModal/InkSignature/index.js","webpack:///./src/ui/src/helpers/cropImageFromCanvas.js","webpack:///./src/ui/src/components/SignatureModal/TextSignature/TextSignature.js","webpack:///./src/ui/src/components/SignatureModal/TextSignature/index.js","webpack:///./src/ui/src/components/SignatureModal/ImageSignature/ImageSignature.js","webpack:///./src/ui/src/components/SignatureModal/ImageSignature/index.js","webpack:///./src/ui/src/components/SignatureModal/SavedSignatures/SavedSignatures.js","webpack:///./src/ui/src/components/SignatureModal/SavedSignatures/index.js","webpack:///./src/ui/src/components/SignatureModal/SignatureModal.js","webpack:///./src/ui/src/components/SignatureModal/index.js"],"names":["module","exports","i","propTypes","isModalOpen","PropTypes","bool","isTabPanelSelected","disableCreateButton","func","enableCreateButton","isInitialsModeEnabled","InkSignature","setIt","fullSignatureCanvas","useRef","initialsCanvas","fullSignaturePathsRef","initialsPathsRef","t","useTranslation","useState","dimension","setDimension","fullSignatureDrawn","setFullSignatureDrawn","initialsDrawn","setInitialsDrawn","forceUpdate","it","useEffect","signatureTool","core","getTool","canvas","current","setSignatureCanvas","multiplier","window","Core","getCanvasMultiplier","getContext","scale","secondCanvas","setInitialsCanvas","clearFullSignatureCanvas","clearInitialsCanvas","signatureToolArray","getToolsFromAllDocumentViewers","setSignature","setInitials","resizeCanvas","SignatureModes","FULL_SIGNATURE","INITIALS","resizeFullSignatureCanvas","resizeInitialsCanvas","height","width","resizeCanvasAsyncCall","useCallback","clearSignatureCanvas","handleFinishDrawingFullSignature","isEmptySignature","deepCopy","getFullSignatureAnnotation","getPaths","handleFinishDrawingInitials","getInitialsAnnotation","paths","pathsCopy","length","j","Math","Point","x","y","toolStyles","defaults","initialsContainerStyle","display","bounds","onResize","measureRef","className","ref","onSwiping","event","stopPropagation","onMouseUp","onTouchEnd","onMouseLeave","onClick","disabled","style","Dropdown","placeholder","ColorPalette","color","property","onStyleChange","value","setToolStyles","StrokeColor","handleColorInputChange","overridePalette2","cropImageFromCanvas","index","ctx","pixels","imageData","getImageData","data","push","sort","a","b","n","cut","putImageData","toDataURL","CANVAS_MULTIPLIER","parseInitialsFromFullSignature","fullSiganture","split","map","join","toUpperCase","getSignatureLength","text","fontSize","fontFamily","font","textSpan","document","createElement","id","visibility","getRootNode","getElementsByTagName","appendChild","textContent","signatureWidth","getBoundingClientRect","remove","scaleFontSize","currentFontSize","minFontSize","maxFontSize","FONT_SIZE","floor","measurementReference","setFontInCanvas","selectedFontFamily","fontColor","fillStyle","textAlign","textBaseline","drawTextInCanvas","clearRect","fillText","TextSignature","fonts","useSelector","state","selectors","getSignatureFonts","fullSignature","setFullSiganture","initials","isDefaultValue","setIsDefaultValue","Annotations","Color","setFontColor","setFontSize","inputRef","fullSignatureHiddenCanvasRef","initialsHiddenCanvasRef","hiddenFullSignatureRef","hiddenInitialsRef","setSelectedFontFamily","includes","setInitialsInTool","currentUser","getDisplayAuthor","getCurrentUser","focus","isIOS","setSelectionRange","select","onUpdateAnnotationPermission","addEventListener","removeEventListener","trim","base64","forEach","tool","isDisabled","initialsInputStyle","type","onChange","e","target","replace","newFontSize","toHexString","classNames","items","getCustomItemStyle","item","getKey","getDisplayValue","onClickItem","currentSelectionKey","maxHeight","isMobile","dataElement","signatureType","acceptedFileTypes","acceptedFileSize","readImageFile","file","Promise","resolve","reject","fileReader","FileReader","onload","imageSource","result","some","indexOf","fileSize","size","i18next","readAsDataURL","ImageSignature","fullSignatureImage","setFullSignatureImage","fullSignatureFileSize","setFullSignatureFileSize","initialsImage","setInitialsImage","initialsFileSize","setInitialsFileSize","draggingSignatureType","setDraggingSignatureType","fullSignatureErrorMessage","setFullSignatureErrorMessage","initialsErrorMessage","setInitialsErrorMessage","fullSignatureInputRef","initialsInputRef","handleFullSignatureFileChange","readFullSignatureFile","files","handleInitialsFileChange","readInitialsFile","handleDragEnter","preventDefault","handleDragOver","handleDragLeave","parentNode","contains","relatedTarget","handleDragExit","handleFullSignatureFileDrop","dataTransfer","handleInitialsFileDrop","handleFullSignatureDragEnter","handleFullSignatureDragLeave","handleInitialsDragEnter","handleInitialsDragLeave","renderPrompt","hasLimit","fullSignatureFileSizeCheck","initialsFileSizeCheck","fullSignatureContainerClass","mobile","dragging","initialsContainerClass","src","maxWidth","onDragEnter","onDragLeave","onDragOver","onDrop","onDragExit","accept","click","SavedSignatures","selectedIndex","setSelectedIndex","dispatch","useDispatch","getDisplayedSignatures","getSelectedDisplayedSignatureIndex","isElementDisabled","getSavedInitials","getSelectedDisplayedInitialsIndex","getSignatureMode","getInitialsOffset","displayedSignatures","selectedDisplayedSignatureIndex","isSignatureDeleteButtonDisabled","savedInitials","selectedDisplayedInitialsIndex","signatureMode","initialsOffset","deleteSignatureAndInitials","isFullSignature","skipInitial","initialsIndex","actions","setInitialsOffset","deleteSavedInitials","setSelectedDisplayedInitialsIndex","hidePreview","setToolMode","defaultTool","deleteSavedSignature","setSelectedDisplayedSignatureIndex","displayedIntials","Array","concat","empty","signature","key","active","checked","alt","imgSrc","data-element","Icon","glyph","SignatureModal","DataElements","SIGNATURE_MODAL","isElementOpen","getActiveToolName","getActiveDocumentViewerKey","getIsInitialsModeEnabled","SAVED_SIGNATURES_TAB","getSelectedTab","isOpen","activeToolName","activeDocumentViewerKey","isSavedTabDisabled","selectedTab","createButtonDisabled","setCreateButtonDisabled","useDidUpdate","closeElements","PRINT_MODAL","ERROR_MODAL","closeModal","clearLocation","closeElement","createSignatures","createFullSignature","createInitials","saveSignatures","hasLocation","addSignature","showPreview","saveInitials","isEmptyInitialsSignature","addInitials","showInitialsPreview","setSignatureMode","annotation","modalClass","Modal","open","closed","isSavedTabSelected","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","FocusTrap","locked","onMouseDown","Tabs","Button","title","img"],"mappings":"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","file":"chunks/5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LEFT_HEADER_WIDTH\":\"41px\",\"RIGHT_HEADER_WIDTH\":\"41px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LEFT_HEADER_WIDTH\":\"41px\",\"RIGHT_HEADER_WIDTH\":\"41px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LEFT_HEADER_WIDTH\":\"41px\",\"RIGHT_HEADER_WIDTH\":\"41px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LEFT_HEADER_WIDTH\":\"41px\",\"RIGHT_HEADER_WIDTH\":\"41px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LEFT_HEADER_WIDTH\":\"41px\",\"RIGHT_HEADER_WIDTH\":\"41px\"};","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Measure from 'react-measure';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport setToolStyles from 'helpers/setToolStyles';\nimport { Swipeable } from 'react-swipeable';\nimport ColorPalette from 'components/ColorPalette';\nimport Dropdown from 'components/Dropdown';\nimport SignatureModes from 'constants/signatureModes';\nimport core from 'core';\n\nimport './InkSignature.scss';\n\nconst useForceUpdate = () => {\n  const [, setIt] = useState(false);\n  return () => setIt((it) => !it);\n};\n\nconst propTypes = {\n  isModalOpen: PropTypes.bool,\n  isTabPanelSelected: PropTypes.bool,\n  disableCreateButton: PropTypes.func,\n  enableCreateButton: PropTypes.func,\n  isInitialsModeEnabled: PropTypes.bool,\n};\n\nconst InkSignature = ({\n  isModalOpen,\n  isTabPanelSelected,\n  disableCreateButton,\n  enableCreateButton,\n  isInitialsModeEnabled = false\n}) => {\n  const fullSignatureCanvas = useRef();\n  const initialsCanvas = useRef();\n  // the ref holds the path points of the underlying freehand annotation\n  // when users switch to a different tab the underlying signature annotation will change\n  // so this ref is used for setting the current uderlying annotation back when users switch back to the ink tab\n  const fullSignaturePathsRef = useRef();\n  const initialsPathsRef = useRef();\n  // the ref holds an id that will be used to check if the newly added signature annotation is the same as the freehand annotation that's drawn in the canvas\n  const [t] = useTranslation();\n  const [dimension, setDimension] = useState({});\n  const [fullSignatureDrawn, setFullSignatureDrawn] = useState(false);\n  const [initialsDrawn, setInitialsDrawn] = useState(false);\n\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    const signatureTool = core.getTool('AnnotationCreateSignature');\n    const canvas = fullSignatureCanvas.current;\n\n    signatureTool.setSignatureCanvas(canvas);\n    const multiplier = window.Core.getCanvasMultiplier();\n    canvas.getContext('2d').scale(multiplier, multiplier);\n\n    // Now set the initials canvas\n    const secondCanvas = initialsCanvas.current;\n    signatureTool.setInitialsCanvas(secondCanvas);\n    secondCanvas.getContext('2d').scale(multiplier, multiplier);\n  }, []);\n\n  useEffect(() => {\n    if (isModalOpen) {\n      clearFullSignatureCanvas();\n      clearInitialsCanvas();\n    }\n  }, [isModalOpen]);\n\n  useEffect(() => {\n    async function resizeFullSignatureCanvas() {\n      if (isModalOpen && isTabPanelSelected) {\n        const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n        for (const signatureTool of signatureToolArray) {\n          signatureTool.setSignature(fullSignaturePathsRef.current);\n          signatureTool.setInitials(initialsPathsRef.current);\n          // use resizeCanvas here mainly for redawing the underlying signature annotation to make it show on the canvas\n          await signatureTool.resizeCanvas(SignatureModes.FULL_SIGNATURE);\n        }\n      }\n    }\n\n\n    async function resizeInitialsCanvas() {\n      if (isModalOpen && isTabPanelSelected && isInitialsModeEnabled) {\n        const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n        for (const signatureTool of signatureToolArray) {\n          signatureTool.setInitials(initialsPathsRef.current);\n          await signatureTool.resizeCanvas(SignatureModes.INITIALS);\n        }\n      }\n    }\n\n    function checkEnableCreateButton() {\n      if (isInitialsModeEnabled) {\n        (fullSignaturePathsRef.current && initialsPathsRef.current) ? enableCreateButton() : disableCreateButton();\n      } else {\n        fullSignaturePathsRef.current ? enableCreateButton() : disableCreateButton();\n      }\n    }\n\n    resizeFullSignatureCanvas();\n    resizeInitialsCanvas();\n    checkEnableCreateButton();\n  }, [isTabPanelSelected, isModalOpen, isInitialsModeEnabled]);\n\n  useEffect(() => {\n    async function resizeCanvasAsyncCall() {\n      if (dimension.height && dimension.width) {\n        const signatureTool = core.getTool('AnnotationCreateSignature');\n        await signatureTool.resizeCanvas();\n\n        if (isInitialsModeEnabled) {\n          await signatureTool.resizeCanvas(SignatureModes.INITIALS);\n        }\n      }\n    }\n    resizeCanvasAsyncCall();\n  }, [dimension, isInitialsModeEnabled]);\n\n  useEffect(() => {\n    if (fullSignatureDrawn && (!isInitialsModeEnabled || initialsDrawn)) {\n      enableCreateButton();\n    } else {\n      disableCreateButton();\n    }\n  }, [initialsDrawn, fullSignatureDrawn, isInitialsModeEnabled]);\n\n  const clearFullSignatureCanvas = useCallback(() => {\n    const signatureTool = core.getTool('AnnotationCreateSignature');\n    signatureTool.clearSignatureCanvas();\n    fullSignaturePathsRef.current = null;\n    setFullSignatureDrawn(false);\n  }, []);\n\n  const clearInitialsCanvas = useCallback(() => {\n    const signatureTool = core.getTool('AnnotationCreateSignature');\n    signatureTool.clearInitialsCanvas();\n    initialsPathsRef.current = null;\n    setInitialsDrawn(false);\n  }, []);\n\n  const handleFinishDrawingFullSignature = async () => {\n    const signatureTool = core.getTool('AnnotationCreateSignature');\n    if (!(await signatureTool.isEmptySignature())) {\n      // need to deep copy the paths because it will be modified\n      // when the annotation is added to the document\n      // we want to keep the unmodified paths so that users can keep drawing on the canvas\n      fullSignaturePathsRef.current = deepCopy(signatureTool.getFullSignatureAnnotation().getPaths());\n      setFullSignatureDrawn(true);\n    }\n  };\n\n  const handleFinishDrawingInitials = async () => {\n    const signatureTool = core.getTool('AnnotationCreateSignature');\n    const initialsAnnotation = signatureTool.getInitialsAnnotation();\n    if (initialsAnnotation) {\n      // need to deep copy the paths because it will be modified\n      // when the annotation is added to the document\n      // we want to keep the unmodified paths so that users can keep drawing on the canvas\n      initialsPathsRef.current = deepCopy(signatureTool.getInitialsAnnotation().getPaths());\n      setInitialsDrawn(true);\n    }\n  };\n\n  const handleColorInputChange = (property, value) => {\n    setToolStyles('AnnotationCreateSignature', property, value);\n    const signatureTool = core.getTool('AnnotationCreateSignature');\n    if (signatureTool.getFullSignatureAnnotation()) {\n      signatureTool.getFullSignatureAnnotation().StrokeColor = value;\n      signatureTool.resizeCanvas(SignatureModes.FULL_SIGNATURE);\n    }\n\n    if (signatureTool.getInitialsAnnotation()) {\n      signatureTool.getInitialsAnnotation().StrokeColor = value;\n      signatureTool.resizeCanvas(SignatureModes.INITIALS);\n    }\n    // hack for tool styles for signature not being on state\n    forceUpdate();\n  };\n\n  const deepCopy = (paths) => {\n    const pathsCopy = [];\n    for (let i = 0; i < paths.length; ++i) {\n      for (let j = 0; j < paths[i].length; ++j) {\n        if (!pathsCopy[i]) {\n          pathsCopy[i] = [];\n        }\n        pathsCopy[i][j] = new window.Core.Math.Point(paths[i][j].x, paths[i][j].y);\n      }\n    }\n\n    return pathsCopy;\n  };\n\n  const signatureTool = core.getTool('AnnotationCreateSignature');\n  const toolStyles = signatureTool.defaults;\n  const initialsContainerStyle = isInitialsModeEnabled ? {} : { display: 'none' };\n\n  return (\n    <Measure bounds onResize={({ bounds }) => setDimension(bounds)}>\n      {({ measureRef }) => (\n        <div className=\"ink-signature\" ref={measureRef}>\n          <Swipeable\n            onSwiping={({ event }) => event.stopPropagation()}\n            className=\"canvas-colorpalette-container\"\n          >\n            <div className='signature-and-initials-container'>\n              <div className='signature-input full-signature'>\n                <canvas\n                  className=\"ink-signature-canvas\"\n                  onMouseUp={handleFinishDrawingFullSignature}\n                  onTouchEnd={handleFinishDrawingFullSignature}\n                  onMouseLeave={handleFinishDrawingFullSignature}\n                  ref={fullSignatureCanvas}\n                />\n                <div className=\"signature-input-footer\">\n                  <div className=\"signature-prompt\">\n                    {t('option.signatureModal.drawSignature')}\n                  </div>\n                  <button className=\"footer-signature-clear\" onClick={clearFullSignatureCanvas} disabled={!fullSignatureDrawn}>\n                    {t('action.clear')}\n                  </button>\n                </div>\n              </div>\n              <div className='signature-input initials' style={initialsContainerStyle}>\n                <canvas\n                  className=\"ink-signature-canvas\"\n                  onMouseUp={handleFinishDrawingInitials}\n                  onTouchEnd={handleFinishDrawingInitials}\n                  onMouseLeave={handleFinishDrawingInitials}\n                  ref={initialsCanvas}\n                />\n                <div className=\"signature-input-footer\">\n                  <div className=\"signature-prompt\">\n                    {t('option.signatureModal.drawInitial')}\n                  </div>\n                  <button className=\"footer-signature-clear\" onClick={clearInitialsCanvas} disabled={!initialsDrawn}>\n                    {t('action.clear')}\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"colorpalette-clear-container\">\n              <div className=\"signature-style-options\">\n                <Dropdown\n                  disabled={true}\n                  placeholder={'Text Styles'}\n                />\n                <div className=\"placeholder-dropdown\"></div>\n                <div className=\"divider\"></div>\n                <ColorPalette\n                  color={toolStyles['StrokeColor']}\n                  property=\"StrokeColor\"\n                  onStyleChange={(property, value) => handleColorInputChange(property, value)}\n                  overridePalette2={['#000000', '#4E7DE9', '#E44234']}\n                />\n              </div>\n            </div>\n          </Swipeable>\n        </div>\n      )}\n    </Measure>\n  );\n};\n\nInkSignature.propTypes = propTypes;\n\nexport default InkSignature;\n","import InkSignature from './InkSignature';\n\nexport default InkSignature;","\n// Crops the image more accurately by removing white space from all side of the image.\nfunction cropImageFromCanvas(canvas) {\n  const ctx = canvas.getContext('2d');\n  let width = canvas.width;\n  let height = canvas.height;\n  const pixels = { x: [], y: [] };\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  let x;\n  let y;\n  let index;\n\n  for (y = 0; y < height; y++) {\n    for (x = 0; x < width; x++) {\n      index = (y * width + x) * 4;\n      if (imageData.data[index + 3] > 0) {\n        pixels.x.push(x);\n        pixels.y.push(y);\n      }\n    }\n  }\n  pixels.x.sort(function(a, b) {\n    return a - b;\n  });\n  pixels.y.sort(function(a, b) {\n    return a - b;\n  });\n  const n = pixels.x.length - 1;\n\n  width = 1 + pixels.x[n] - pixels.x[0];\n  height = 1 + pixels.y[n] - pixels.y[0];\n  const cut = ctx.getImageData(pixels.x[0], pixels.y[0], width, height);\n\n  canvas.width = width;\n  canvas.height = height;\n  ctx.putImageData(cut, 0, 0);\n\n  return canvas.toDataURL();\n}\n\nexport default cropImageFromCanvas;","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport ColorPalette from 'components/ColorPalette';\nimport Dropdown from 'components/Dropdown';\nimport core from 'core';\nimport { isIOS, isMobile } from 'helpers/device';\nimport cropImageFromCanvas from 'helpers/cropImageFromCanvas';\nimport selectors from 'selectors';\nimport { useTranslation } from 'react-i18next';\n\nimport './TextSignature.scss';\nimport getRootNode from 'helpers/getRootNode';\n\nconst propTypes = {\n  isModalOpen: PropTypes.bool,\n  isTabPanelSelected: PropTypes.bool,\n  disableCreateButton: PropTypes.func,\n  enableCreateButton: PropTypes.func,\n  isInitialsModeEnabled: PropTypes.bool,\n};\n\nconst FONT_SIZE = 72;\nconst TYPED_SIGNATURE_FONT_SIZE = (FONT_SIZE * 2) / 3;\nconst MAX_SIGNATURE_LENGTH = 350;\nconst DEFAULT_FONT_COLOR = '#000000';\nconst CANVAS_MULTIPLIER = window.Core.getCanvasMultiplier();\nconst TEXT_CLIP_PADDING = 100;\n\nconst useForceUpdate = () => {\n  const [, setIt] = useState(false);\n  return () => setIt((it) => !it);\n};\n\nconst parseInitialsFromFullSignature = (fullSiganture) => {\n  return fullSiganture?.split(' ').map((x) => x[0]).join('').toUpperCase();\n};\n\nconst getSignatureLength = (text, fontSize, fontFamily) => {\n  const font = `${fontSize}px ${fontFamily}`;\n  const textSpan = document.createElement('span');\n  textSpan.id = 'textSpan';\n  textSpan.style.display = 'inline-block';\n  textSpan.style.visibility = 'hidden';\n  textSpan.style.font = font;\n\n  getRootNode().getElementsByTagName('body')[0].appendChild(textSpan);\n  textSpan.textContent = text;\n\n  const signatureWidth = textSpan.getBoundingClientRect().width;\n  textSpan.remove();\n  return signatureWidth;\n};\n\nconst scaleFontSize = (text, fontFamily) => {\n  let minFontSize = 0;\n  let maxFontSize = TYPED_SIGNATURE_FONT_SIZE;\n  let currentFontSize;\n\n  while (minFontSize <= maxFontSize) {\n    currentFontSize = Math.floor((minFontSize + maxFontSize) / 2);\n\n    const signatureWidth = getSignatureLength(text, currentFontSize, fontFamily);\n    if (signatureWidth > MAX_SIGNATURE_LENGTH) {\n      maxFontSize = currentFontSize - 1;\n    } else {\n      minFontSize = currentFontSize + 1;\n    }\n  }\n  return currentFontSize;\n};\n\nconst resizeCanvas = (canvas, measurementReference) => {\n  let { width, height } = measurementReference.current.getBoundingClientRect();\n  width += TEXT_CLIP_PADDING;\n  height += TEXT_CLIP_PADDING;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  canvas.width = width * CANVAS_MULTIPLIER;\n  canvas.height = height * CANVAS_MULTIPLIER;\n};\n\nconst setFontInCanvas = ({ canvas, text, selectedFontFamily, fontColor }) => {\n  const ctx = canvas.getContext('2d');\n  const fontSize = scaleFontSize(text, selectedFontFamily);\n  ctx.fillStyle = fontColor;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.font = `${fontSize * CANVAS_MULTIPLIER}px ${selectedFontFamily}`;\n};\n\nconst drawTextInCanvas = (canvas, text) => {\n  const ctx = canvas.getContext('2d');\n  const { width, height } = canvas;\n  ctx.clearRect(0, 0, width, height);\n  ctx.fillText(text, width / 2, height / 2);\n};\n\nconst TextSignature = ({\n  isModalOpen,\n  isTabPanelSelected,\n  disableCreateButton,\n  enableCreateButton,\n  isInitialsModeEnabled = false,\n}) => {\n  const fonts = useSelector((state) => selectors.getSignatureFonts(state));\n  const [fullSignature, setFullSiganture] = useState('');\n  const [initials, setInitials] = useState('');\n  const [isDefaultValue, setIsDefaultValue] = useState(true);\n  const [fontColor, setFontColor] = useState(new window.Core.Annotations.Color(DEFAULT_FONT_COLOR));\n  const [fontSize, setFontSize] = useState(TYPED_SIGNATURE_FONT_SIZE);\n  const inputRef = useRef();\n  const fullSignatureHiddenCanvasRef = useRef();\n  const initialsHiddenCanvasRef = useRef();\n  const hiddenFullSignatureRef = useRef();\n  const hiddenInitialsRef = useRef();\n  const [t] = useTranslation();\n\n  const [selectedFontFamily, setSelectedFontFamily] = useState(fonts[0]);\n\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    // this can happen when an user added a new signature font, select it and then removed it\n    // in this case we just assume there's at least one font and set the active index to 0\n    if (!fonts.includes(selectedFontFamily)) {\n      setSelectedFontFamily(fonts[0]);\n    }\n  }, [selectedFontFamily, fonts]);\n\n  useEffect(() => {\n    const initialsCanvas = initialsHiddenCanvasRef.current;\n\n    if (isTabPanelSelected) {\n      resizeCanvas(initialsCanvas, hiddenInitialsRef);\n      setFontInCanvas({\n        canvas: initialsCanvas,\n        text: initials,\n        selectedFontFamily,\n        fontColor,\n      });\n      drawTextInCanvas(initialsCanvas, initials);\n\n      if (isModalOpen) {\n        setInitialsInTool();\n      }\n    }\n  }, [isTabPanelSelected, initials, fonts, fontColor, selectedFontFamily]);\n\n  useEffect(() => {\n    const fullSignatureCanvas = fullSignatureHiddenCanvasRef.current;\n\n    if (isTabPanelSelected) {\n      resizeCanvas(fullSignatureCanvas, hiddenFullSignatureRef);\n      setFontInCanvas({\n        canvas: fullSignatureCanvas,\n        text: fullSignature,\n        selectedFontFamily,\n        fontColor,\n      });\n      drawTextInCanvas(fullSignatureCanvas, fullSignature);\n      if (isModalOpen) {\n        setSignature();\n      }\n    }\n  }, [isTabPanelSelected, fullSignature, fonts, fontColor, selectedFontFamily]);\n\n  useEffect(() => {\n    setFontColor(fontColor);\n    if (isModalOpen && isTabPanelSelected) {\n      const currentUser = core.getDisplayAuthor(core.getCurrentUser());\n      setFullSiganture(currentUser);\n      setInitials(parseInitialsFromFullSignature(currentUser));\n      setSignature();\n    }\n  }, [isModalOpen, isTabPanelSelected]);\n\n  useEffect(() => {\n    if (isTabPanelSelected) {\n      inputRef.current?.focus();\n\n      if (isIOS) {\n        inputRef.current.setSelectionRange(0, 9999);\n      } else {\n        inputRef.current.select();\n      }\n    }\n  }, [isTabPanelSelected]);\n\n  useEffect(() => {\n    const onUpdateAnnotationPermission = () => {\n      if (isDefaultValue) {\n        const currentUser = core.getDisplayAuthor(core.getCurrentUser());\n        setFullSiganture(currentUser);\n        setInitials(parseInitialsFromFullSignature(currentUser));\n        enableCreateButton();\n      }\n    };\n\n    core.addEventListener('updateAnnotationPermission', onUpdateAnnotationPermission);\n    return () => {\n      core.removeEventListener('updateAnnotationPermission', onUpdateAnnotationPermission);\n    };\n  }, [isDefaultValue]);\n\n  const setSignature = () => {\n    const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n    const canvas = fullSignatureHiddenCanvasRef.current;\n\n    const signatureValue = fullSignature || '';\n    if (signatureValue.trim()) {\n      const base64 = cropImageFromCanvas(canvas);\n      signatureToolArray.forEach((tool) => tool.setSignature(base64));\n      enableCreateButton();\n    } else {\n      signatureToolArray.forEach((tool) => tool.setSignature(null));\n      disableCreateButton();\n    }\n  };\n\n  const setInitialsInTool = () => {\n    const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n    const canvas = initialsHiddenCanvasRef.current;\n\n    const initialsValue = initials || '';\n    if (initialsValue.trim()) {\n      const base64 = cropImageFromCanvas(canvas);\n      signatureToolArray.forEach((tool) => tool.setInitials(base64));\n      enableCreateButton();\n    } else {\n      signatureToolArray.forEach((tool) => tool.setInitials(null));\n      disableCreateButton();\n    }\n  };\n\n  const handleFullSignatureChange = (e) => {\n    setIsDefaultValue(false);\n    // Use regex instead of 'trimStart' for IE11 compatibility\n    const value = e.target.value.replace(/^\\s+/g, '');\n    setSignature();\n    setFullSiganture(value);\n    setInitials(parseInitialsFromFullSignature(value));\n\n    const newFontSize = scaleFontSize(value, selectedFontFamily);\n    setFontSize(newFontSize);\n  };\n\n  const handleInitialsChange = (e) => {\n    setIsDefaultValue(false);\n    // Use regex instead of 'trimStart' for IE11 compatibility\n    const initials = e.target.value.replace(/^\\s+/g, '');\n    setSignature();\n    setInitials(initials);\n  };\n\n  const handleColorInputChange = (property, value) => {\n    setFontColor(value);\n    // hack for tool styles for signature not being on state\n    // Note from ADBG : But why tho?\n    forceUpdate();\n  };\n\n  const handleDropdownSelectionChange = (font) => {\n    setSelectedFontFamily(font);\n    const newFontSize = scaleFontSize(fullSignature, font);\n    setFontSize(newFontSize);\n  };\n\n  // These elements are hidden from the user but are used as references to measure\n  // how the text fits, and then resize the canvas accordingly\n  const renderHiddenSignatureElements = () => {\n    return (\n      <div\n        className={classNames({\n          'text-signature-text': true,\n        })}\n        style={{ fontFamily: selectedFontFamily, fontSize: FONT_SIZE, color: fontColor.toHexString() }}\n      >\n        <div\n          className=\"text-container\"\n          ref={hiddenFullSignatureRef}\n        >\n          {fullSignature}\n        </div>\n        <div\n          className=\"text-container\"\n          ref={hiddenInitialsRef}\n        >\n          {initials}\n        </div>\n      </div>\n    );\n  };\n\n  const isDisabled = !(isModalOpen && isTabPanelSelected);\n  const initialsInputStyle = isInitialsModeEnabled ? {} : { display: 'none' };\n\n  return (\n    <div className=\"text-signature\">\n      <div className=\"signature-and-initials-container\">\n        <div className=\"signature-input full-signature\">\n          <label>\n            <input\n              className=\"text-signature-input\"\n              ref={inputRef}\n              type=\"text\"\n              value={fullSignature}\n              onChange={handleFullSignatureChange}\n              style={{ fontFamily: selectedFontFamily || fonts, fontSize, color: fontColor.toHexString() }}\n              disabled={isDisabled}\n            />\n          </label>\n          <div className=\"signature-input-footer\">\n            <div className='signature-prompt'>\n              {t('option.signatureModal.typeSignature')}\n            </div>\n            <button\n              className=\"footer-signature-clear\"\n              onClick={() => {\n                setFullSiganture('');\n                inputRef.current.focus();\n              }}\n              disabled={isDisabled || fullSignature.length === 0}\n            >\n              {t('action.clear')}\n            </button>\n          </div>\n        </div>\n        <div className=\"signature-input initials\" style={initialsInputStyle}>\n          <label>\n            <input\n              className=\"text-signature-input\"\n              type=\"text\"\n              value={initials}\n              onChange={handleInitialsChange}\n              style={{ fontFamily: selectedFontFamily || fonts, fontSize, color: fontColor.toHexString() }}\n              disabled={isDisabled}\n            />\n          </label>\n          <div className=\"signature-input-footer\">\n            <div className='signature-prompt'>\n              {t('option.signatureModal.typeInitial')}\n            </div>\n            <button\n              className=\"footer-signature-clear\"\n              onClick={() => setInitials('')}\n              disabled={isDisabled || initials.length === 0}\n            >\n              {t('action.clear')}\n            </button>\n          </div>\n        </div>\n      </div>\n      {renderHiddenSignatureElements()}\n      <canvas ref={fullSignatureHiddenCanvasRef} />\n      <canvas ref={initialsHiddenCanvasRef} />\n      <div className=\"colorpalette-clear-container\">\n        <div className=\"signature-style-options\">\n          <Dropdown\n            items={fonts.map((font) => ({ font, value: `${fullSignature} ${isInitialsModeEnabled ? initials : ''}` }))}\n            getCustomItemStyle={(item) => ({ fontFamily: item.font })}\n            getKey={(item) => item.font}\n            getDisplayValue={(item) => {\n              return item.value || item.font;\n            }}\n            onClickItem={handleDropdownSelectionChange}\n            currentSelectionKey={selectedFontFamily || fonts[0]}\n            maxHeight={isMobile() ? 80 : null}\n            dataElement=\"text-signature-font-dropdown\"\n          />\n          <div className=\"placeholder-dropdown\"></div>\n          <div className=\"divider\"></div>\n          <ColorPalette\n            color={fontColor}\n            property=\"fontColor\"\n            onStyleChange={(property, value) => handleColorInputChange(property, value)}\n            overridePalette2={['#000000', '#4E7DE9', '#E44234']}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTextSignature.propTypes = propTypes;\n\nexport default TextSignature;\n","import TextSignature from './TextSignature';\n\nexport default TextSignature;","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { isMobile } from 'helpers/device';\nimport classNames from 'classnames';\nimport i18next from 'i18next';\nimport core from 'core';\n\nimport './ImageSignature.scss';\n\nconst propTypes = {\n  isModalOpen: PropTypes.bool,\n  isTabPanelSelected: PropTypes.bool,\n  disableCreateButton: PropTypes.func,\n  enableCreateButton: PropTypes.func,\n  isInitialsModeEnabled: PropTypes.bool,\n};\n\nconst signatureType = {\n  FULL_SIGNATURE: 'fullSignature',\n  INITIALS: 'initials',\n};\nconst acceptedFileTypes = ['png', 'jpg', 'jpeg'];\nlet acceptedFileSize = null;\n\nfunction readImageFile(file) {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = (event) => {\n      const imageSource = event.target.result;\n      const isValidType = acceptedFileTypes.some(\n        (type) => imageSource.indexOf(`image/${type}`) !== -1,\n      );\n\n      if (isValidType) {\n        resolve({\n          imageSource,\n          fileSize: file.size,\n        });\n      } else {\n        reject(i18next.t('message.imageSignatureAcceptedFileTypes', {\n          acceptedFileTypes: acceptedFileTypes.join(', '),\n        }));\n      }\n    };\n\n    fileReader.readAsDataURL(file);\n  });\n}\n\n\nconst ImageSignature = ({\n  isModalOpen,\n  isTabPanelSelected,\n  disableCreateButton,\n  enableCreateButton,\n  isInitialsModeEnabled = false,\n}) => {\n  const [fullSignatureImage, setFullSignatureImage] = useState(null);\n  const [fullSignatureFileSize, setFullSignatureFileSize] = useState(null);\n  const [initialsImage, setInitialsImage] = useState(null);\n  const [initialsFileSize, setInitialsFileSize] = useState(null);\n  const [draggingSignatureType, setDraggingSignatureType] = useState('');\n  const [fullSignatureErrorMessage, setFullSignatureErrorMessage] = useState(null);\n  const [initialsErrorMessage, setInitialsErrorMessage] = useState(null);\n  const fullSignatureInputRef = useRef();\n  const initialsInputRef = useRef();\n  const [t] = useTranslation();\n\n  useEffect(() => {\n    const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n    acceptedFileSize = signatureToolArray[0]['ACCEPTED_FILE_SIZE'];\n    if (!isModalOpen) {\n      setFullSignatureImage(null);\n      setInitialsImage(null);\n      setInitialsFileSize(null);\n      setInitialsFileSize(null);\n    } else if (isModalOpen && isTabPanelSelected) {\n      signatureToolArray.forEach((signatureTool) => signatureTool.setSignature(fullSignatureImage, fullSignatureFileSize));\n      signatureToolArray.forEach((signatureTool) => signatureTool.setInitials(initialsImage, initialsFileSize));\n      (fullSignatureImage && (!isInitialsModeEnabled || initialsImage)) ? enableCreateButton() : disableCreateButton();\n    }\n  }, [fullSignatureImage, initialsImage, isTabPanelSelected, isModalOpen, initialsFileSize, fullSignatureFileSize, isInitialsModeEnabled]);\n\n  const handleFullSignatureFileChange = (event) => {\n    readFullSignatureFile(event.target.files[0]);\n  };\n\n  const handleInitialsFileChange = (event) => {\n    readInitialsFile(event.target.files[0]);\n  };\n\n  const handleDragEnter = useCallback((event, signatureType) => {\n    event.preventDefault();\n    setDraggingSignatureType(signatureType);\n  }, []);\n\n  const handleDragOver = useCallback((event) => {\n    event.preventDefault();\n  }, []);\n\n  const handleDragLeave = useCallback((event) => {\n    event.preventDefault();\n\n    if (!event.target.parentNode.contains(event.relatedTarget)) {\n      setDraggingSignatureType(null);\n    }\n  }, []);\n\n  const handleDragExit = useCallback((event) => {\n    event.preventDefault();\n    setDraggingSignatureType(null);\n  }, []);\n\n  const handleFullSignatureFileDrop = (event) => {\n    event.preventDefault();\n    setDraggingSignatureType(null);\n    const { files } = event.dataTransfer;\n\n    if (files.length) {\n      readFullSignatureFile(files[0]);\n    }\n  };\n\n  const readFullSignatureFile = async (file) => {\n    try {\n      const result = await readImageFile(file);\n      const { imageSource, fileSize } = result;\n      setFullSignatureErrorMessage('');\n      setFullSignatureImage(imageSource);\n      setFullSignatureFileSize(fileSize);\n    } catch (errorMessage) {\n      setFullSignatureErrorMessage(errorMessage);\n    }\n  };\n\n  const handleInitialsFileDrop = (event) => {\n    event.preventDefault();\n    setDraggingSignatureType(null);\n    const { files } = event.dataTransfer;\n\n    if (files.length) {\n      readInitialsFile(files[0]);\n    }\n  };\n\n  const readInitialsFile = async (file) => {\n    try {\n      const result = await readImageFile(file);\n      const { imageSource, fileSize } = result;\n      setInitialsErrorMessage('');\n      setInitialsImage(imageSource);\n      setInitialsFileSize(fileSize);\n    } catch (errorMessage) {\n      setInitialsErrorMessage(errorMessage);\n    }\n  };\n\n  const handleFullSignatureDragEnter = useCallback((event) => {\n    handleDragEnter(event, signatureType.FULL_SIGNATURE);\n  }, [handleDragEnter]);\n\n  const handleFullSignatureDragLeave = useCallback((event) => {\n    handleDragLeave(event, signatureType.FULL_SIGNATURE);\n  }, [handleDragLeave]);\n\n\n  const handleInitialsDragEnter = useCallback((event) => {\n    handleDragEnter(event, signatureType.INITIALS);\n  }, [handleDragEnter]);\n\n  const handleInitialsDragLeave = useCallback((event) => {\n    handleDragLeave(event, signatureType.INITIALS);\n  }, [handleDragLeave]);\n\n  const renderPrompt = () => {\n    if (isMobile()) {\n      return (\n        <div className=\"image-signature-separator\">\n          {t('option.signatureModal.selectImage')}\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className=\"image-signature-dnd\">\n          {t('option.signatureModal.dragAndDrop')}\n        </div>\n        <div className=\"image-signature-separator\">\n          {t('option.signatureModal.or')}\n        </div>\n      </>\n    );\n  };\n\n  const renderFullSignatureImage = () => (<img src={fullSignatureImage} style={{ maxWidth: '100%', maxHeight: '100%' }} />);\n\n  const renderFullSignaturePicker = () => (\n    <div\n      className={fullSignatureContainerClass}\n      onDragEnter={handleFullSignatureDragEnter}\n      onDragLeave={handleFullSignatureDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleFullSignatureFileDrop}\n      onDragExit={handleDragExit}\n    >\n      {renderPrompt()}\n      <div className=\"image-signature-upload\">\n        <input\n          ref={fullSignatureInputRef}\n          id=\"upload\"\n          type=\"file\"\n          accept={acceptedFileTypes.map((type) => `.${type}`).join(',')}\n          onChange={handleFullSignatureFileChange}\n          disabled={!(isModalOpen && isTabPanelSelected)}\n        />\n        <div\n          onClick={() => fullSignatureInputRef.current.click()}\n          className=\"pick-image-button\"\n        >\n          {t('option.signatureModal.pickImage')}\n        </div>\n      </div>\n      {fullSignatureErrorMessage && (\n        <div className=\"image-signature-error\">{fullSignatureErrorMessage}</div>\n      )}\n    </div>\n  );\n\n  const renderInitialsImage = () => (<img src={initialsImage} style={{ maxWidth: '100%', maxHeight: '100%' }} />);\n\n  const renderInitialsPicker = () => (\n    <div\n      className={initialsContainerClass}\n      onDragEnter={handleInitialsDragEnter}\n      onDragLeave={handleInitialsDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleInitialsFileDrop}\n      onDragExit={handleDragExit}\n    >\n      {renderPrompt()}\n      <div className=\"image-signature-upload\">\n        <input\n          ref={initialsInputRef}\n          id=\"upload\"\n          type=\"file\"\n          accept={acceptedFileTypes.map((type) => `.${type}`).join(',')}\n          onChange={handleInitialsFileChange}\n          disabled={!(isModalOpen && isTabPanelSelected)}\n        />\n        <div\n          onClick={() => initialsInputRef.current.click()}\n          className=\"pick-image-button\"\n        >\n          {t('option.signatureModal.pickInitialsFile')}\n        </div>\n      </div>\n      {initialsErrorMessage && (\n        <div className=\"image-signature-error\">{initialsErrorMessage}</div>\n      )}\n    </div>\n  );\n\n  const hasLimit = typeof acceptedFileSize === 'number' && acceptedFileSize > 0;\n  const fullSignatureFileSizeCheck = !hasLimit || fullSignatureFileSize < acceptedFileSize;\n  const initialsFileSizeCheck = !hasLimit || initialsFileSize < acceptedFileSize;\n  const fullSignatureContainerClass = classNames('image-signature-upload-container', { mobile: isMobile(), dragging: draggingSignatureType === signatureType.FULL_SIGNATURE });\n  const initialsContainerClass = classNames('image-signature-upload-container', { mobile: isMobile(), dragging: draggingSignatureType === signatureType.INITIALS });\n  const initialsInputStyle = isInitialsModeEnabled ? {} : { display: 'none' };\n  return (\n    <div className=\"image-signature\">\n      <div className=\"signature-and-initials-container\">\n        <div className=\"signature-input image full-signature\">\n          {fullSignatureImage && fullSignatureFileSizeCheck ?\n            renderFullSignatureImage() :\n            renderFullSignaturePicker()\n          }\n        </div>\n        <div className=\"signature-input image initials\" style={initialsInputStyle}>\n          {initialsImage && initialsFileSizeCheck ?\n            renderInitialsImage() :\n            renderInitialsPicker()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nImageSignature.propTypes = propTypes;\n\nexport default ImageSignature;\n","import ImageSignature from './ImageSignature';\n\nexport default ImageSignature;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport './SavedSignatures.scss';\nimport SignatureModes from 'constants/signatureModes';\nimport defaultTool from 'constants/defaultTool';\nimport Icon from 'components/Icon';\nimport { useTranslation } from 'react-i18next';\nimport core from 'core';\nimport classNames from 'classnames';\n\n\nconst SavedSignatures = ({ selectedIndex, setSelectedIndex }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [\n    displayedSignatures,\n    selectedDisplayedSignatureIndex,\n    isSignatureDeleteButtonDisabled,\n    savedInitials,\n    selectedDisplayedInitialsIndex,\n    signatureMode,\n    initialsOffset,\n  ] = useSelector(\n    (state) => [\n      selectors.getDisplayedSignatures(state),\n      selectors.getSelectedDisplayedSignatureIndex(state),\n      selectors.isElementDisabled(state, 'defaultSignatureDeleteButton'),\n      selectors.getSavedInitials(state),\n      selectors.getSelectedDisplayedInitialsIndex(state),\n      selectors.getSignatureMode(state),\n      selectors.getInitialsOffset(state),\n    ]\n  );\n\n  const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n\n  const deleteSignatureAndInitials = async (index) => {\n    const isFullSignature = signatureMode === SignatureModes.FULL_SIGNATURE;\n    const initialsIndex = index - initialsOffset;\n    const skipInitial = initialsIndex < 0;\n    if (!skipInitial) {\n      signatureToolArray[0].deleteSavedInitials(initialsIndex);\n      const isDeletingSelectedInitials = selectedDisplayedInitialsIndex === initialsIndex && !skipInitial;\n      if (isDeletingSelectedInitials) {\n        dispatch(actions.setSelectedDisplayedInitialsIndex(0));\n        for (const signatureTool of signatureToolArray) {\n          signatureTool.hidePreview();\n        }\n        core.setToolMode(defaultTool);\n      }\n    } else {\n      dispatch(actions.setInitialsOffset(initialsOffset - 1));\n    }\n    signatureToolArray[0].deleteSavedSignature(index);\n    const isDeletingSelectedSignature = selectedDisplayedSignatureIndex === index;\n    if (isDeletingSelectedSignature) {\n      dispatch(actions.setSelectedDisplayedSignatureIndex(0));\n      for (const signatureTool of signatureToolArray) {\n        signatureTool.hidePreview();\n      }\n      core.setToolMode(defaultTool);\n    } else if (isFullSignature ? index < selectedDisplayedSignatureIndex : initialsIndex < selectedDisplayedInitialsIndex) {\n      dispatch(actions.setSelectedDisplayedSignatureIndex(selectedDisplayedSignatureIndex - 1));\n    }\n  };\n\n  const displayedIntials = new Array(initialsOffset).concat(savedInitials);\n\n  return (\n    <div className={classNames('SavedSignatures', { empty: !displayedSignatures || displayedSignatures.length < 1 })}>\n      {displayedSignatures.length ?\n        displayedSignatures.map((signature, index) => <div\n          key={index}\n          className={classNames('signature-row', { active: selectedIndex === index, 'no-initials': !displayedIntials?.[index] })}\n          onClick={() => setSelectedIndex(index)}\n        >\n          <div className=\"inputContainer\">\n            <input type='radio' onChange={() => setSelectedIndex(index)} checked={index === selectedIndex}/>\n            <div className=\"contentContainer\">\n              <div className=\"imgContainer\">\n                <img alt={t('option.toolsOverlay.signatureAltText')} src={displayedSignatures[index].imgSrc}/>\n              </div>\n              {displayedIntials?.[index] && <div className=\"imgContainer\">\n                <img alt={t('option.toolsOverlay.signatureAltText')} src={displayedIntials[index].imgSrc}/>\n              </div>}\n              {!isSignatureDeleteButtonDisabled && (\n                <button\n                  className=\"icon\"\n                  data-element=\"defaultSignatureDeleteButton\"\n                  onClick={() => deleteSignatureAndInitials(index)}\n                >\n                  <Icon glyph=\"icon-delete-line\" />\n                </button>\n              )}\n            </div>\n          </div>\n          <div className=\"labelContainer\">\n            <div className=\"signatureLabel\">{t('option.type.signature')}</div>\n            {displayedIntials?.[index] && <div className=\"intialsLabel\">{t('option.type.initials')}</div>}\n          </div>\n        </div>\n        )\n        :\n        <div className='emptyListContainer'>\n          {t('option.signatureModal.noSignatures')}\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default SavedSignatures;\n","import SavedSignatures from './SavedSignatures';\n\nexport default SavedSignatures;","import React, { useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { FocusTrap } from '@pdftron/webviewer-react-toolkit';\n\nimport { Tabs, Tab, TabPanel } from 'components/Tabs';\nimport InkSignature from 'components/SignatureModal/InkSignature';\nimport TextSignature from 'components/SignatureModal/TextSignature';\nimport ImageSignature from 'components/SignatureModal/ImageSignature';\nimport Button from 'components/Button';\nimport SavedSignatures from 'components/SignatureModal/SavedSignatures';\n\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport { Swipeable } from 'react-swipeable';\nimport SignatureModes from 'constants/signatureModes';\nimport DataElements from 'constants/dataElement';\nimport useDidUpdate from 'hooks/useDidUpdate';\n\nimport './SignatureModal.scss';\n\nconst SignatureModal = () => {\n  const [\n    isDisabled,\n    isOpen,\n    activeToolName,\n    signatureMode,\n    activeDocumentViewerKey,\n    isInitialsModeEnabled,\n    isSavedTabDisabled,\n    selectedTab,\n    displayedSignatures,\n    savedInitials,\n  ] = useSelector((state) => [\n    selectors.isElementDisabled(state, DataElements.SIGNATURE_MODAL),\n    selectors.isElementOpen(state, DataElements.SIGNATURE_MODAL),\n    selectors.getActiveToolName(state),\n    selectors.getSignatureMode(state),\n    selectors.getActiveDocumentViewerKey(state),\n    selectors.getIsInitialsModeEnabled(state),\n    selectors.isElementDisabled(state, DataElements.SAVED_SIGNATURES_TAB),\n    selectors.getSelectedTab(state, DataElements.SIGNATURE_MODAL),\n    selectors.getDisplayedSignatures(state),\n    selectors.getSavedInitials(state),\n  ]);\n\n  const signatureToolArray = core.getToolsFromAllDocumentViewers('AnnotationCreateSignature');\n  const [createButtonDisabled, setCreateButtonDisabled] = useState(true);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n\n  // Hack to close modal if hotkey to open other tool is used.\n  useDidUpdate(() => {\n    if (activeToolName !== 'AnnotationCreateSignature') {\n      dispatch(\n        actions.closeElements([\n          DataElements.SIGNATURE_MODAL,\n          'signatureOverlay',\n        ]),\n      );\n    }\n  }, [dispatch, activeToolName]);\n\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(\n        actions.closeElements([\n          DataElements.PRINT_MODAL,\n          'loadingModal',\n          'progressModal',\n          DataElements.ERROR_MODAL\n        ]),\n      );\n    }\n  }, [dispatch, isOpen]);\n\n  const closeModal = () => {\n    for (const signatureTool of signatureToolArray) {\n      signatureTool.clearLocation();\n      signatureTool.setSignature(null);\n    }\n    dispatch(actions.closeElement(DataElements.SIGNATURE_MODAL));\n  };\n\n  const createSignatures = async () => {\n    createFullSignature();\n\n    if (isInitialsModeEnabled) {\n      createInitials();\n    }\n  };\n\n  const createFullSignature = async () => {\n    signatureToolArray[0].saveSignatures(signatureToolArray[0].getFullSignatureAnnotation());\n    for (let i = 1; i < signatureToolArray.length; i++) {\n      await signatureToolArray[i].setSignature(signatureToolArray[0].getFullSignatureAnnotation());\n    }\n\n    const signatureTool = signatureToolArray[activeDocumentViewerKey - 1];\n\n    if (!(await signatureTool.isEmptySignature())) {\n      core.setToolMode('AnnotationCreateSignature');\n\n      if (signatureMode === SignatureModes.FULL_SIGNATURE) {\n        if (signatureTool.hasLocation()) {\n          await signatureTool.addSignature();\n        } else {\n          for (const signatureTool of signatureToolArray) {\n            await signatureTool.showPreview();\n          }\n        }\n\n        dispatch(actions.closeElement(DataElements.SIGNATURE_MODAL));\n      }\n    }\n  };\n\n  const createInitials = async () => {\n    signatureToolArray[0].saveInitials(signatureToolArray[0].getInitialsAnnotation());\n    for (let i = 1; i < signatureToolArray.length; i++) {\n      await signatureToolArray[i].saveInitials(signatureToolArray[0].getInitialsAnnotation());\n    }\n\n    const signatureTool = signatureToolArray[activeDocumentViewerKey - 1];\n    if (!(await signatureTool.isEmptyInitialsSignature())) {\n      core.setToolMode('AnnotationCreateSignature');\n\n      if (signatureMode === SignatureModes.INITIALS) {\n        if (signatureTool.hasLocation()) {\n          await signatureTool.addInitials();\n        } else {\n          for (const signatureTool of signatureToolArray) {\n            await signatureTool.showInitialsPreview();\n          }\n        }\n      }\n\n      dispatch(actions.closeElement(DataElements.SIGNATURE_MODAL));\n      // back to the default mode\n      dispatch(actions.setSignatureMode(SignatureModes.FULL_SIGNATURE));\n    }\n  };\n\n  const setSignature = async (index) => {\n    const isFullSignature = signatureMode === SignatureModes.FULL_SIGNATURE;\n    dispatch(actions[isFullSignature ? 'setSelectedDisplayedSignatureIndex' : 'setSelectedDisplayedInitialsIndex'](index));\n    const { annotation } = isFullSignature ? displayedSignatures[index] : savedInitials[index];\n    core.setToolMode('AnnotationCreateSignature');\n    for (const signatureTool of signatureToolArray) {\n      await signatureTool[isFullSignature ? 'setSignature' : 'setInitials'](annotation);\n      if (signatureTool.hasLocation()) {\n        await signatureTool[isFullSignature ? 'addSignature' : 'addInitials']();\n      } else {\n        await signatureTool[isFullSignature ? 'showPreview' : 'showInitialsPreview']();\n      }\n    }\n    dispatch(actions.closeElement(DataElements.SIGNATURE_MODAL));\n  };\n\n  const disableCreateButton = useCallback(() => {\n    setCreateButtonDisabled(true);\n  }, [createButtonDisabled]);\n\n  const enableCreateButton = useCallback(() => {\n    setCreateButtonDisabled(false);\n  }, [createButtonDisabled]);\n\n  const modalClass = classNames({\n    Modal: true,\n    SignatureModal: true,\n    open: isOpen,\n    closed: !isOpen,\n  });\n  const isSavedTabSelected = selectedTab === 'savedSignaturePanelButton';\n\n  return isDisabled ? null : (\n    <Swipeable\n      onSwipedUp={closeModal}\n      onSwipedDown={closeModal}\n      preventDefaultTouchmoveEvent\n    >\n      <FocusTrap locked={isOpen}>\n        <div\n          className={modalClass}\n          data-element={DataElements.SIGNATURE_MODAL}\n        >\n          <div\n            className={classNames('container', { 'include-initials': isInitialsModeEnabled })}\n            onMouseDown={(e) => e.stopPropagation()}\n          >\n            <div className=\"swipe-indicator\" />\n            <Tabs id=\"signatureModal\">\n              <div className=\"header-container\">\n                <div className=\"header\">\n                  <p>{t('option.signatureModal.modalName')}</p>\n                  <Button\n                    className=\"signatureModalCloseButton\"\n                    dataElement=\"signatureModalCloseButton\"\n                    title=\"action.close\"\n                    img=\"ic_close_black_24px\"\n                    onClick={closeModal}\n                  />\n                </div>\n                <div className=\"tab-list\">\n                  {!isSavedTabDisabled && <Tab dataElement=\"savedSignaturePanelButton\">\n                    <button className=\"tab-options-button\">\n                      {t('option.type.saved')}\n                    </button>\n                  </Tab>}\n                  <div className=\"tab-options-divider\" />\n                  <Tab dataElement=\"inkSignaturePanelButton\">\n                    <button className=\"tab-options-button\">\n                      {t('action.draw')}\n                    </button>\n                  </Tab>\n                  <div className=\"tab-options-divider\" />\n                  <Tab dataElement=\"textSignaturePanelButton\">\n                    <button className=\"tab-options-button\">\n                      {t('action.type')}\n                    </button>\n                  </Tab>\n                  <div className=\"tab-options-divider\" />\n                  <Tab dataElement=\"imageSignaturePanelButton\">\n                    <button className=\"tab-options-button\">\n                      {t('action.upload')}\n                    </button>\n                  </Tab>\n                </div>\n              </div>\n              {!isSavedTabDisabled && <TabPanel dataElement=\"savedSignaturePanel\">\n                <SavedSignatures {...{ selectedIndex, setSelectedIndex }} />\n              </TabPanel>}\n              <TabPanel dataElement=\"inkSignaturePanel\">\n                <InkSignature\n                  isModalOpen={isOpen}\n                  enableCreateButton={enableCreateButton}\n                  disableCreateButton={disableCreateButton}\n                  isInitialsModeEnabled={isInitialsModeEnabled}\n                />\n              </TabPanel>\n              <TabPanel dataElement=\"textSignaturePanel\">\n                <TextSignature\n                  isModalOpen={isOpen}\n                  enableCreateButton={enableCreateButton}\n                  disableCreateButton={disableCreateButton}\n                  isInitialsModeEnabled={isInitialsModeEnabled}\n                />\n              </TabPanel>\n              <TabPanel dataElement=\"imageSignaturePanel\">\n                <ImageSignature\n                  isModalOpen={isOpen}\n                  enableCreateButton={enableCreateButton}\n                  disableCreateButton={disableCreateButton}\n                  isInitialsModeEnabled={isInitialsModeEnabled}\n                />\n              </TabPanel>\n              <div className=\"footer\">\n                <button className=\"signature-create\" onClick={isSavedTabSelected ? () => setSignature(selectedIndex) : createSignatures}\n                  disabled={isSavedTabSelected ? (!isSavedTabSelected || !displayedSignatures.length || !isOpen) : (!(isOpen) || createButtonDisabled)}>\n                  {t(isSavedTabSelected ? 'action.apply' : 'action.create')}\n                </button>\n              </div>\n            </Tabs>\n          </div>\n        </div>\n      </FocusTrap>\n    </Swipeable>\n  );\n};\n\nexport default SignatureModal;\n","import SignatureModal from './SignatureModal';\n\nexport default SignatureModal;"],"sourceRoot":""}